{"version":3,"sources":["components/ContactList/ContactListItem/ContactListItem.module.css","components/Filter/Filter.module.css","components/NumberContacts/NumberContacts.module.css","components/Container/Container.module.css","components/ContactList/ContactList.module.css","redux/contacts/contacts-selectors.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","components/Container/Container.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactListItem/ContactLIstItem.js","components/ContactList/ContactList.js","components/NumberContacts/NumberContacts.js","App.js","redux/contacts/contacts-reducers.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","getContacts","state","contacts","getFilter","filter","getLoader","loading","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","name","includes","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","Container","children","className","styles","container","ContactForm","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","handleChange","event","currentTarget","value","reset","contact__form","onSubmit","preventDefault","trim","checkingEmptyQuery","toast","warning","find","contact","checkingContactName","checkingContactNumber","a","post","data","addContact","info","contact__label","contact__input","placeholder","type","onChange","required","contact__btn","Filter","filter__label","filter__input","target","ContactListItem","id","deleteContact","contact__item","contact__info","contact__infoName","contact__infoNumber","btn__delete","onClick","ContactList","length","contact__list","map","delete","NumberContacts","numberContacts","text","App","loader","useEffect","get","autoClose","createReducer","_","payload","combineReducers","middleware","getDefaultMiddleware","logger","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6e747af2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact__item\":\"ContactListItem_contact__item__18eQC\",\"contact__info\":\"ContactListItem_contact__info__2w48p\",\"contact__infoNumber\":\"ContactListItem_contact__infoNumber__t6IA9\",\"btn__delete\":\"ContactListItem_btn__delete__1v46w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter__label\":\"Filter_filter__label__tuq6m\",\"filter__input\":\"Filter_filter__input__1UOsE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"NumberContacts_text__xJnyr\",\"number\":\"NumberContacts_number__2xz-u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3JtHU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact__list\":\"ContactList_contact__list__2eKzR\"};","import { createSelector } from '@reduxjs/toolkit';\n\nconst getContacts = state => state.contacts.contacts;\nconst getFilter = state => state.contacts.filter;\nconst getLoader = state => state.contacts.loading;\n\nconst getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n\nexport { getContacts, getFilter, getLoader, getVisibleContacts };\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const changeFilter = createAction('contacts/ChangeFilter');\n","import axios from 'axios';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from './contacts-actions';\n\naxios.defaults.baseURL = 'http://localhost:4040';\n\nexport const fetchContacts = () => async dispatch => {\n  dispatch(fetchContactsRequest());\n\n  try {\n    const { data } = await axios.get('/contacts');\n    dispatch(fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactsError(error));\n  }\n\n  // axios\n  //   .get('/contacts')\n  //   .then(({ data }) => dispatch(fetchContactsSuccess(data)))\n  //   .catch(error => dispatch(fetchContactsError(error)));\n};\n\nexport const addContact = (name, number) => async dispatch => {\n  const contact = { name, number };\n\n  dispatch(addContactRequest);\n\n  try {\n    const { data } = await axios.post('/contacts', contact);\n    dispatch(addContactSuccess(data));\n  } catch (error) {\n    dispatch(addContactError(error));\n  }\n\n  // axios\n  //   .post('/contacts', contact)\n  //   .then(({ data }) => dispatch(addContactSuccess(data)))\n  //   .catch(error => dispatch(addContactError(error)));\n};\n\nexport const deleteContact = id => async dispatch => {\n  dispatch(deleteContactRequest());\n\n  try {\n    await axios.delete(`/contacts/${id}`);\n    dispatch(deleteContactSuccess(id));\n  } catch (error) {\n    dispatch(deleteContactError(error));\n  }\n\n  // axios\n  //   .delete(`/contacts/${id}`)\n  //   .then(() => dispatch(deleteContactSuccess(id)))\n  //   .catch(error => dispatch(deleteContactError(error)));\n};\n","import styles from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={styles.container}>{children}</div>;\n}\n\nexport default Container;\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\n\nimport { addContact } from '../../redux/contacts/contacts-operations';\nimport { getContacts } from '../../redux/contacts/contacts-selectors';\n\nimport styles from './ContactForm.module.css';\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const checkingEmptyQuery = (name, number) => {\n    return name.trim() === '' || number.trim() === '';\n  };\n\n  const checkingContactName = name => {\n    return contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n  };\n\n  const checkingContactNumber = number => {\n    return contacts.find(contact => contact.number === number);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (checkingEmptyQuery(name, number)) {\n      toast.warning('Enter contact name and number phone!');\n      return;\n    }\n\n    if (checkingContactName(name, number)) {\n      toast.info(`This ${name} is already in the phonebook!`);\n      return;\n    }\n\n    if (checkingContactNumber(number)) {\n      toast.info(`This ${number} is already in the phonebook!`);\n      return;\n    }\n\n    dispatch(addContact(name, number));\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={styles.contact__form} onSubmit={handleSubmit}>\n      <label className={styles.contact__label}>\n        Name\n        <input\n          className={styles.contact__input}\n          placeholder=\"Enter name...\"\n          type=\"text\"\n          value={name}\n          name=\"name\"\n          onChange={handleChange}\n          required\n        />\n      </label>\n\n      <label className={styles.contact__label}>\n        Number\n        <input\n          className={styles.contact__input}\n          placeholder=\"Enter number...\"\n          type=\"tel\"\n          value={number}\n          name=\"number\"\n          onChange={handleChange}\n          required\n        />\n      </label>\n\n      <button className={styles.contact__btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import { useSelector, useDispatch } from 'react-redux';\n\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\nimport { changeFilter } from '../../redux/contacts/contacts-actions';\n\nimport styles from './Filter.module.css';\n\nconst Filter = () => {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const onChange = event => dispatch(changeFilter(event.target.value));\n\n  return (\n    <label className={styles.filter__label}>\n      Find contact by name\n      <input\n        placeholder=\"Enter name...\"\n        className={styles.filter__input}\n        type=\"text\"\n        value={value}\n        name=\"filter\"\n        onChange={onChange}\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","import styles from './ContactListItem.module.css';\n\nconst ContactListItem = ({ id, name, number, deleteContact }) => {\n  return (\n    <li className={styles.contact__item} key={id}>\n      <p className={styles.contact__info}>\n        <span className={styles.contact__infoName}>{name}:</span>\n        <span className={styles.contact__infoNumber}> {number}</span>\n      </p>\n\n      <button\n        className={styles.btn__delete}\n        type=\"button\"\n        onClick={() => deleteContact(id)}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nexport default ContactListItem;\n","import { useSelector, useDispatch } from 'react-redux';\n\nimport { deleteContact } from '../../redux/contacts/contacts-operations';\nimport { getVisibleContacts } from '../../redux/contacts/contacts-selectors';\nimport ContactListItem from './ContactListItem';\n\nimport styles from './ContactList.module.css';\n\nconst ContactList = () => {\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  if (contacts.length === 0) return null;\n  return (\n    <ul className={styles.contact__list}>\n      {contacts.map(({ id, name, number }) => (\n        <ContactListItem\n          key={id}\n          name={name}\n          number={number}\n          deleteContact={() => dispatch(deleteContact(id))}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import { useSelector } from 'react-redux';\nimport { getContacts } from '../../redux/contacts/contacts-selectors';\n\nimport styles from './NumberContacts.module.css';\n\nconst NumberContacts = () => {\n  const contacts = useSelector(getContacts);\n\n  const numberContacts = contacts.length;\n\n  return (\n    <p className={styles.text}>\n      Number of contacts:\n      <span className={styles.number}> {numberContacts}</span>\n    </p>\n  );\n};\n\nexport default NumberContacts;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { getContacts, getLoader } from './redux/contacts/contacts-selectors';\nimport { fetchContacts } from './redux/contacts/contacts-operations';\nimport Container from './components/Container';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\nimport NumberContacts from './components/NumberContacts';\n\nimport './App.css';\n\nfunction App() {\n  const contacts = useSelector(getContacts);\n  const loader = useSelector(getLoader);\n  const dispatch = useDispatch();\n\n  useEffect(() => dispatch(fetchContacts()), [dispatch]);\n\n  return (\n    <div className=\"App\">\n      <Container>\n        <h1 className=\"main__title\">Phonebook</h1>\n        <ContactForm />\n\n        {contacts.length > 0 ? (\n          <div>\n            <h2 className=\"section__title\">Contacts</h2>\n            <Filter />\n            <ContactList />\n            <NumberContacts />\n          </div>\n        ) : (\n          <p>PHONE BOOK IS EMPTY</p>\n        )}\n\n        {loader && <p>Loading...</p>}\n\n        <ToastContainer autoClose={3000} />\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n} from './contacts-actions';\n\nconst contacts = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nexport default combineReducers({\n  contacts,\n  filter,\n  loading,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\n\nimport contactsReducer from './contacts/contacts-reducers.js';\n\nconst middleware = [...getDefaultMiddleware(), logger];\n\nexport const store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact__form\":\"ContactForm_contact__form__10D7X\",\"contact__label\":\"ContactForm_contact__label__3eVQr\",\"contact__input\":\"ContactForm_contact__input__ZaHnv\",\"contact__btn\":\"ContactForm_contact__btn__2c62I\"};"],"sourceRoot":""}